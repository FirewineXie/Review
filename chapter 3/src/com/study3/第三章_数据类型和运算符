第三章：数据类型和运算符
    3.2 标识符和关键字
        3.2.1 分隔符
            有分号、花括号、原点、方括号、圆括号、空格都具有特殊的分隔作用
        3.2.2 命名规则
            使用标识符时，有以下几点规则：
                1）标识符可以由字母、数字、下划线和美元符组成，其中数字不能开头
                2）标识符不能是java关键字和保留字，但可以包含关键字和保留字
                3）标识符不能包含空格
                4）标识符只能包含美元符，不能包含@、#等其他特殊字符
        //goto和const这两个关键字是被称为保留字
    3.3 数据类型分类
        java语言是强类型语言，强类型包含两方面含义:1）所有的变量必须先声明后使用2）指定类型的变量只能接受类型与之匹配的的值
    3.4 基本数据类型
        整数类型 byte 1个字节  short 2个字节  int 4个字节    long 8个字节
        字符类型 char 2个字节
        浮点类型 float 4个字节     double 8个字节
        //使用float 在值的后面要加f或F
        //使用long  在值的后面要加l或L
        3.4.3 浮点型
            浮点数有两种表现形式：十进制  和   科学计数法 例如5.12E2  为 5.12 * 10^2
            浮点数中有正无穷大和负无穷大和NaN
                      正无穷大 POSITIVE_INFINITY
                      负无穷大 NEGATIVE_INFINITY
                      非数  NaN
        3.4.4 数值中使用画线分隔
            java7引用可以利用下划线，不管是整形数值还是浮点数值，可以直观的分辨数值中到底包含多少位
        3.4.5 布尔型
            boolean 类型的值或变量只要用来做旗标来进行流程控制用于：1）if2）while3）do while 4）for循环 5）三目运算符
    3.5 基本类型的类型转换
        分为：自动类型转换和强制类型装换
            自动类型转换：就是把一个表数范围小的值直接赋给另一个表数范围大的变量。
            强制类型装换：语法格式(targetType)value  容易造成数据丢失，
            **对于java的8种基本类型都提供了对应的包装类，而且都提供了parseXxx（String str）转换的静态方法
        3.5.3 表达式类型的自动提升
            当一个算术表达式包含多个基本类型的值时，整个算术表达式的数据类型将发生自动提升，
            提升规则：
                        所有的byte和short和char类型将被提升到ini类型
                        整个算术表达式的数据类型自动提升到与表达式中最高等级操作数同样的类型
    3.6 直接量
        int a = 5  这就是直接量   是指在通过源代码直接给出的值，
                     能指定直接量的通常只有三种类型，基本类型，字符串类型，null类型。
    3.7 运算符
        运算符是一种特殊的符号，用于表示数据的运算、赋值和比较等。
        分为：算术运算符、赋值运算符、比较运算符、逻辑运算符、位运算符、类型想关运算符
        3.7.1 算术运算符
                包含加、减、乘、除、求余
                更复杂的运算是在java.lang.Math类里
        3.7.2 赋值运算符
                赋值运算符是从右边向左边进行运算的，
                赋值运算也可以支持连续赋值 a =b =c = 4  (但是造成程序可读性降低，，不采用)
        3.7.3 位运算符
                & 按位与   | 按位或   ~ 按位非   ^ 按位异或  << 左移运算符    >> 右移运算符    >>>无符号右移运算符
        3.7.6 逻辑运算符
                &&  与   & 不短路与（不会短路）    || 或    | 不短路或  ！ 非     ^ 异或
        3.7.7 三目运算符
                (expression) ? if-true-statement : if-false-statement;
